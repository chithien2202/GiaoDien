<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="simpleButton2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Ay/z8/z/2ZzKg43wl4IAAAAASUVORK5CYII=
</value>
  </data>
  <data name="simpleButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>